<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- 커넥션 풀링을 통한 DataSoruce생성 -->
	<bean id="ds" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/ssafy"></property>
	</bean>

	<!-- SqlSessionFactoryBean 생성 -->
	<bean id="ssfb" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<!-- mybatis-config.xml는 자바 소스내부에있기 때문에 classpath: 설정 필요함 -->
		<property name="configLocation"	value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:product.xml</value>
			</list>
		</property>
	</bean>

	<!-- SqlSession 생성 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="ssfb" />
	</bean>

	<!-- 트랜잭션 관리 생성 -->
	<bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds" />
	</bean>

	<!-- 트랜잭션 매니저 지정 -->
	<tx:annotation-driven transaction-manager="tm" />
</beans>
